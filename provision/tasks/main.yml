---
# tasks file for provision

# Installs Python3, if it doesn't exist. raw_text variable is defined in group_vars/all.yml
# and tests for various package managers
- name: Install Python3
  raw: "{{ raw_text }}"
  ignore_errors: yes
  no_log: true

# Runs Setup module to gather new facts, since Python3 is now installed
- name: Gather facts about hosts after Python3 install
  setup:

# This will group hosts by specific key (group_vars) using OS Distribution ansible facts
# This will FAIL if there is no python interpreter installed (solved in previous step)
- name: Group by OS
  group_by:
    key: os_{{ ansible_facts['distribution'] }}

# Creates the managed host's ansible user, whatever is specified in vars/main.yml
- name: Create the {{ vars.user }} user
  user: 
    name: "{{ vars.user }}"
    state: present

# Adds SSH public keys for the ansible user created in the previous step
- name: Add SSH public keys to {{ vars.user }} user
  authorized_key:
    user: "{{ vars.user }}"
    key: "{{ lookup('file', item) }}"
  with_fileglob:
    - "{{ vars.pubkeys }}"


# Creates sudo configuration for the ansible user
- name: Sudo configuration for {{ vars.user }}
  template:
    src: sudoers.j2
    dest: /etc/sudoers.d/{{ vars.user }}
    validate: 'visudo -cf %s'
    mode: 0440

# Makes sure firewalld is installed
- name: firewalld installation check
  yum:
    name: firewalld
    state: present
  notify: start firewalld

# add additional SSH port
- name: firewalld configuration for new SSH port
  firewalld:
    port: "{{ vars.ssh_port }}"
    permanent: yes
    state: enabled
    immediate: yes

# Modifies sshd config, mostly to disable password auth & disable root login
# Notifies handler in handlers/main.yml to restart sshd after sshd config modificaiton
- name: SSHD configuration, disable root login / password auth
  template:
    src: "{{ sshd_j2 }}"
    dest: /etc/ssh/sshd_config
    validate: 'sshd -t -f %s'
    mode: 0640
  notify: restart sshd